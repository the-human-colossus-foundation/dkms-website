import{_ as t,c as i,a,o as n}from"./app-B1H4axZY.js";const s={};function r(o,e){return n(),i("div",null,e[0]||(e[0]=[a('<h1 id="decentralised-key-management-system" tabindex="-1"><a class="header-anchor" href="#decentralised-key-management-system"><span>Decentralised Key Management System</span></a></h1><p>Key management is crucial in safeguarding digital information and dealing with how cryptographic keys—essentials for securing data—are created, exchanged, stored, and eventually retired. It&#39;s about setting up and managing the systems that handle these keys, from their technical design to how users interact with them.</p><p>Our Decentralized Key Management System (DKMS) offers all the necessary components to build any authentication system tailored to meet diverse security needs. At the heart of DKMS is our commitment to decentralized authentication. This means our system provides unique, self-certifying identifiers generated through secure, one-way cryptographic processes that ensure each piece of data is distinct and secure. Designed to work across different platforms and networks, DKMS ensures that identifiers are universal, making it easier and more secure for users everywhere.</p><h2 id="what-is-decentralised-authentication" tabindex="-1"><a class="header-anchor" href="#what-is-decentralised-authentication"><span>What is “Decentralised authentication”?</span></a></h2><p>Data provenance refers to tracing and recording the origin of data and its movement between locations. If digital data is tamper-proof (i.e. provable to have not been corrupted after its creation), it can be assumed authentic. Data authentication focuses on timestamping data inputs at index time, determining each event as factual. That definition also underpins the concept of decentralised authentication, the only difference being that the decentralised version is specific to distributed data ecosystems.</p><h2 id="comparing-with" tabindex="-1"><a class="header-anchor" href="#comparing-with"><span>Comparing with ...</span></a></h2><p>In the landscape of digital security, key management systems can broadly be categorized into three types: centralized, federated, and decentralized like our DKMS. Each type offers unique advantages and caters to different security needs.</p><ul><li><p>Centralized Key Management Systems operate under a single authority that manages all cryptographic keys. This central control simplifies management but also creates a single point of failure. If the central system is compromised, so too are all the keys it manages. This model often struggles with scalability and can become a bottleneck as the system grows.</p></li><li><p>Federated Key Management Systems spread control among multiple, cooperating entities. While this reduces the risk of a single point of failure compared to centralized systems, it still relies on the trust and cooperation between these entities. The federated approach can be more flexible and scalable than centralized systems but often involves complex trust relationships and coordination challenges.</p></li><li><p>Decentralized Key Management Systems (DKMS), such as ours, distribute the management of keys directly to the owners, eliminating single points of failure and reducing reliance on any one entity. This enhances security and resilience, as the compromise of one part does not jeopardize the entire system. DKMS offers the basis to build truly interoperable solutions, with mechanisms that ensure data integrity and authentication across various platforms/networks without needing centralized oversight.</p></li></ul><p>By leveraging a decentralized approach, DKMS enables a more secure, scalable, and resilient authentication system, making it an ideal choice for environments demanding stringent data security and privacy without compromising on accessibility and interoperability.</p><h2 id="how-dkms-works" tabindex="-1"><a class="header-anchor" href="#how-dkms-works"><span>How DKMS works?</span></a></h2><p>DKMS utilizes decentralized authentication, a key management approach that cryptographically binds an identifier to an associated log. This log records the history of all uses or changes to the public/private key pair, ensuring the verifiable provenance of the identifier throughout any ambient infrastructure. The immutable ordering of entries guarantees the factual authenticity of each recorded event, underpinning the integrity of systematic data inputs. Additionally, all system identifiers are designed to be network-agnostic, facilitating seamless interoperability within and across various distributed data ecosystems.</p><p>Moreover, DKMS is built on the principle of end-verifiability, meaning that every element can be independently verified by the user to confirm its authenticity and integrity. This characteristic often manifests through the philosophy of &quot;never trust, always verify,&quot; which is the foundational ideology of the zero-trust architecture.</p><p>Decentralised authentication provides a powerful solution for identifier interoperability, data provenance, data-intensive event streaming, and event-sourcing applications.</p><h2 id="what-technology-is-behind-dkms" tabindex="-1"><a class="header-anchor" href="#what-technology-is-behind-dkms"><span>What technology is behind DKMS?</span></a></h2><p>At the heart of DKMS is the Key Event Receipt Infrastructure (<a href="https://keri.one/" target="_blank" rel="noopener noreferrer">KERI</a>), a protocol designed for decentralized key management without reliance on any network. KERI provides a highly secure framework by maintaining a self-certifying history of all cryptographic operations related to key events, such as creation, rotation, and revocation. This history is immutable and can be independently verified, ensuring the integrity and provenance of the cryptographic keys throughout their lifecycle.</p><p>KERI operates by generating event logs that are uniquely tied to each identifier, creating a verifiable trail of all actions taken with the associated keys. This system ensures that even if a key is compromised, the history and the specific compromised state can be identified and addressed without undermining the entire infrastructure. Thanks to KERI, DKMS supports robust, network-agnostic identifier interoperability across diverse data ecosystems.</p>',16)]))}const d=t(s,[["render",r]]),l=JSON.parse('{"path":"/introduction.html","title":"DKMS Introduction","lang":"en-US","frontmatter":{"title":"DKMS Introduction","description":"Decentralized Key Management Syste"},"headers":[{"level":2,"title":"What is “Decentralised authentication”?","slug":"what-is-decentralised-authentication","link":"#what-is-decentralised-authentication","children":[]},{"level":2,"title":"Comparing with ...","slug":"comparing-with","link":"#comparing-with","children":[]},{"level":2,"title":"How DKMS works?","slug":"how-dkms-works","link":"#how-dkms-works","children":[]},{"level":2,"title":"What technology is behind DKMS?","slug":"what-technology-is-behind-dkms","link":"#what-technology-is-behind-dkms","children":[]}],"git":{"updatedTime":1721919735000,"contributors":[{"name":"blelump","username":"blelump","email":"blelump@martex.nom.pl","commits":2,"url":"https://github.com/blelump"},{"name":"Robert Mitwicki","username":"","email":"robert@thclab.online","commits":1}],"changelog":[{"hash":"5c52d6f3d9662603ee65e5e1a8a9e9c03087e81a","time":1721919735000,"email":"blelump@martex.nom.pl","author":"blelump","message":"minor tweaks"},{"hash":"7ee504d68068ebeaab9591f67c2f456820de9031","time":1721850793000,"email":"robert@thclab.online","author":"Robert Mitwicki","message":"Expand content about what DKMS is"},{"hash":"79f82e0315ecb2de845efcafe04b543fd4cf83ab","time":1657216551000,"email":"blelump@martex.nom.pl","author":"blelump","message":"Add introduction"}]},"filePathRelative":"introduction.md"}');export{d as comp,l as data};
